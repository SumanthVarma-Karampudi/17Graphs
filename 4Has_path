#include<iostream>
#include<queue>
using namespace std;

bool HaspathHelper(bool **edges, int n, int start, int end, bool* visited){
    if(start==end){
        return true;
    }
    visited[start]=true;
    for(int i=0;i<n;i++){
        if(edges[start][i] && !visited[i]){
            if(HaspathHelper(edges, n, i, end, visited)){
               return true; 
            }
        }
    }
    return false;
}

bool Haspath(bool **edges, int n, int start, int end){
    bool* visited=new bool[n];
    return HaspathHelper(edges, n, start, end, visited);
    delete [] visited;
}

int main(){
    int n,e;
    cin>>n>>e;
    bool **edges=new bool*[n];
    for(int i=0;i<n;i++){
        edges[i]=new bool[n];
    }

    for(int i=0;i<e;i++){
        int a,b;
        cin>>a;
        cin>>b;
        edges[a][b]=true;
        edges[b][a]=true;
    }
    
    int start,end;
    cin>>start>>end;
    
    cout<<(Haspath(edges,n,start,end) ? "true": "false");
    
    for(int i=0;i<n;i++){
        delete [] edges[i];
    }
    delete [] edges;
}
