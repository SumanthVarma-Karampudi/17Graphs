Undirected graph:
Degree of a graph = 2 * Total no.of edges

Directed graph:
Indegree and outdegree


---------------------
Graph Representation:
Adjacency matrix:-
  n is the no.of nodes
  m is the no.of edges

int main(){
iint n,m;
cin>>n>>m;
int adj[n+1][m+1];
for(int i=0;i<m;i++){
  int u,v;
  cin>>u>>v;
  adj[u][v]=1;
  adj[v][u]=1;
}

---------------------
Matrix is costly in terms of space
so we use Adjacency List(vector)
let the edges be { 1,2 2,3 1,4 }
adjacency list:
1-2,4
2-1,3
4-1

int main(){
int n,m;
cin>>n>>m;
vector<int> adj(n+1);
for(int i=0;i<=m;i++){
  int u,v;
  //u--->v
  adj[u].push_back(v);
  adj[v].push_back(u); //it is not executed if it is directed
  cin>>u>>v;

if it is weighted graph:
adjacency list will be like: 
1-(2,1),(4,2)
In the above eg 2 is edge and 1 edge weight , 4 is edge and 2 is edge weight
                
